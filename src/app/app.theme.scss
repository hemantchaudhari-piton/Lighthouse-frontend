// -----------------------------------------------------------------------------------------------------
// @ Custom color maps for Fuse
// -----------------------------------------------------------------------------------------------------
@use '@angular/material' as mat;
@include mat.core();

$fuse-white: (
    500: white,
    contrast: (
        500: #333
    )
);
$fuse-black: (
    500: black,
    contrast: (
        500: #FFF,
    )
);
$fuse-navy: (
    50: #ECECEE,
    100: #C5C6CB,
    200: #9EA1A9,
    300: #7D818C,
    400: #5C616F,
    500: #3C4252,
    600: #353A48,
    700: #ECECEE,  //#2D323E    #920b0b
    800: #262933,
    900: #EEF0F0,  //#1E2129    #aab1c4
    A100: #C5C6CB,
    A200: #9EA1A9,
    A400: #5C616F,
    A700: #4a4545, //#2D323E    #920b0b
    contrast: (
        50: #333,
        100: #333,
        200: #333,
        300: #FFF,
        400: #FFF,
        500: #FFF,
        600: #FFF,
        700: #FFF,
        800: #FFF,
        900: #FFF,
        A100: #333,
        A200: #FFF,
        A400: #FFF,
        A700: #FFF,
    )
);

// Generate Fuse color classes for custom palettes
$custom_palettes: (
    fuse-white: $fuse-white,
    fuse-black: $fuse-black,
    fuse-navy: $fuse-navy
);

@include fuse-color-classes($custom_palettes);

// -----------------------------------------------------------------------------------------------------
// @ Typography
// -----------------------------------------------------------------------------------------------------
// Angular Material typography

$typography: mat.define-typography-config(
    $font-family: 'Muli, Helvetica Neue, Arial, sans-serif',
    $headline-1 : mat.define-typography-level(20px, 32px, 600),
    $body-2: mat.define-typography-level(14px, 24px, 600),
    $button: mat.define-typography-level(14px, 14px, 600),
    // $input: mat.define-typography-level(16px, 1.125, 400) // line-height must be unitless !!!
);


// Include the typography configuration in your Angular Material theme
// @include mat-core($typography);

// Setup the typography
// @include angular-material-typography($typography);

// -----------------------------------------------------------------------------------------------------
// @ Component theming
// -----------------------------------------------------------------------------------------------------

// Import app and page component themes here to enable theming for them
// @import "/src/app/layout/components/chat-panel/chat-panel.theme";
@import "../app/layout/components/chat-panel/chat-panel.theme.scss";
@import "../app/layout/components/toolbar/toolbar.theme";

// Import app and page component themes here to enable theming for them
@import "../app/main/igmite.theme";
@import "../app/auth/login/login.theme";
@import "../app/auth/forgot-password/forgot-password.theme";
@import "../app/auth/reset-password/reset-password.theme";
@import "../app/auth/register/register.theme";

// Define a mixin for easier access
@mixin components-theme($theme) {

    // Layout components
    @include chat-panel-theme($theme);
    @include toolbar-theme($theme);

    // Apps    
    @include igmite-login-theme($theme);
    @include forgot-password-theme($theme);
    @include reset-password-theme($theme);
    @include register-theme($theme);
    @include data-list-view-theme($theme);
}

// -----------------------------------------------------------------------------------------------------
// @ Define the default theme
// -----------------------------------------------------------------------------------------------------
// Define the primary, accent and warn palettes
$default-primary-palette: mat.define-palette($fuse-navy);
// $default-primary-palette: mat-palette($fuse-navy);
$default-accent-palette: mat.define-palette(mat.$light-blue-palette, 600, 400, 700);
$default-warn-palette:  mat.define-palette(mat.$red-palette);

// Create the Material theme object
$theme: mat.define-light-theme($default-primary-palette, $default-accent-palette, $default-warn-palette);

// Add ".theme-default" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-default {

    // Create an Angular Material theme from the $theme map
    // @include mat.angular-material-theme($theme);

    // Apply the theme to the Fuse Core
    // @include fuse-core-theme($theme);

    //change
    @include mat.all-component-themes($theme);

    // Apply the theme to the user components
    @include components-theme($theme);

    // Generate Fuse color classes for primary, accent and warn colors
    $palettes: (
        primary: $default-primary-palette,
        accent: $default-accent-palette,
        warn: $default-warn-palette
    );

    @include fuse-color-classes($palettes);
}

// -----------------------------------------------------------------------------------------------------
// @ Define a yellow light theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$yellow-light-theme-primary-palette: mat.define-palette($fuse-navy, 600, 400, 700);
$yellow-light-theme-accent-palette: mat.define-palette(mat.$yellow-palette, 600, 400, 700);
$yellow-light-theme-warn-palette: mat.define-palette(mat.$red-palette);

// Create the Material theme object
$yellow-light-theme: mat.define-light-theme($yellow-light-theme-primary-palette, $yellow-light-theme-accent-palette, $yellow-light-theme-warn-palette);

// Add ".theme-yellow-light" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-yellow-light {

    // Generate the Angular Material theme
    // @include angular-material-theme($yellow-light-theme);

    // Apply the theme to the Fuse Core
    // @include fuse-core-theme($yellow-light-theme);
    @include mat.all-component-themes($yellow-light-theme);
    // Apply the theme to the user components
    @include components-theme($yellow-light-theme);

    // Generate Fuse color classes for primary, accent and warn colors
    $palettes: (
        primary: $yellow-light-theme-primary-palette,
        accent: $yellow-light-theme-accent-palette,
        warn: $yellow-light-theme-warn-palette
    );

    @include fuse-color-classes($palettes);
}

// -----------------------------------------------------------------------------------------------------
// @ Define a blue-gray dark theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$blue-gray-dark-theme-primary-palette: mat.define-palette(mat.$blue-palette);
$blue-gray-dark-theme-accent-palette: mat.define-palette(mat.$blue-gray-palette);
$blue-gray-dark-theme-warn-palette: mat.define-palette(mat.$red-palette);

// Create the Material theme object
$blue-gray-dark-theme: mat.define-dark-theme($blue-gray-dark-theme-primary-palette, $blue-gray-dark-theme-accent-palette, $blue-gray-dark-theme-warn-palette);

// Add ".theme-blue-gray-dark" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-blue-gray-dark {

    // Generate the Angular Material theme
    // @include angular-material-theme($blue-gray-dark-theme);

    // Apply the theme to the Fuse Core
    // @include fuse-core-theme($blue-gray-dark-theme);
    @include mat.all-component-themes($blue-gray-dark-theme);
    // Apply the theme to the user components
    @include components-theme($blue-gray-dark-theme);

    // Generate Fuse color classes for primary, accent and warn colors
    $palettes: (
        primary: $blue-gray-dark-theme-primary-palette,
        accent: $blue-gray-dark-theme-accent-palette,
        warn: $blue-gray-dark-theme-warn-palette
    );

    @include fuse-color-classes($palettes);
}

// -----------------------------------------------------------------------------------------------------
// @ Define a pink dark theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$pink-dark-theme-primary-palette: mat.define-palette(mat.$pink-palette);
$pink-dark-theme-accent-palette: mat.define-palette(mat.$pink-palette);
$pink-dark-theme-warn-palette: mat.define-palette(mat.$red-palette);

// Create the Material theme object
$pink-dark-theme: mat.define-dark-theme($pink-dark-theme-primary-palette, $pink-dark-theme-accent-palette, $pink-dark-theme-warn-palette);

// Add ".theme-pink-dark" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-pink-dark {

    // Generate the Angular Material theme
    // @include angular-material-theme($pink-dark-theme);

    // Apply the theme to the Fuse Core
    // @include fuse-core-theme($pink-dark-theme);
    @include mat.all-component-themes($blue-gray-dark-theme);

    // Apply the theme to the user components
    @include components-theme($pink-dark-theme);

    // Generate Fuse color classes for primary, accent and warn colors
    $palettes: (
        primary: $pink-dark-theme-primary-palette,
        accent: $pink-dark-theme-accent-palette,
        warn: $pink-dark-theme-warn-palette
    );

    @include fuse-color-classes($palettes);
}

.tab-col-15 {
    margin-left: 15px;
}